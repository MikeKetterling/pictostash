{"version":3,"sources":["components/Login.js","components/Signup.js","components/AlbumCard.js","components/AlbumList.js","components/PictureCard.js","components/CarouselImage.js","components/Album.js","components/Sandbox.js","components/NavDropdownList.js","components/NavigationBar.js","components/App.js","index.js"],"names":["Login","setCurrentUser","setIsAuthenticated","setUserAlbums","history","useHistory","useState","username","email","password","formData","setFormData","handleChange","e","target","name","value","className","Col","sm","Form","onSubmit","preventDefault","configObj","method","headers","body","JSON","stringify","fetch","then","resp","ok","json","user","albums","push","errors","console","error","Group","controlId","Control","placeholder","type","onChange","Button","variant","exact","to","Signup","md","lg","imgStyle","AlbumCard","album","setActiveAlbum","deleteHandler","handleShowUpdate","show","setShow","thumbnail","setThumbnail","useRef","useEffect","log","picFetchURL","id","res","response","length","image_url","Card","style","minwidth","Img","src","Body","Title","Row","onClick","description","location","date","OverlayTrigger","placement","delay","hide","overlay","props","Tooltip","ref","xmlns","width","height","fill","class","viewBox","d","AlbumList","addNewAlbum","activeAlbum","showUpdateForm","setShowUpdateForm","hasName","setHasName","hasDescription","setHasDescription","hasLocation","setHasLocation","hasDate","setHasDate","updateForm","setUpdateForm","handleClose","handleCloseUpdate","allAlbumCards","map","changeHandler","key","val","changeUpdateHandler","submitHandler","postConfig","responseAlbumObj","filteredAlbums","filter","editHandler","newAlbums","user_id","r","data","toUpperCase","Modal","onHide","Header","closeButton","Text","color","Footer","PictureCard","imgUrl","handleShowImg","currId","CarouselImage","imgUrls","index","setIndex","items","undefined","imgRecord","url","Carousel","Item","alt","activeIndex","onSelect","Album","allURLs","setAllURLs","showImg","setShowImg","uploadPictures","setUploadPictures","albumToLoad","useLocation","pathname","split","imgURL","testCards","setIds","generatePictureCards","File","file","fd","FormData","append","secure_url","picRecord","album_id","secondPostConfig","pictureRecordObj","allFiles","files","Object","values","multiple","centered","Sandbox","NavDropdownList","NavDropdown","as","NavLink","albumNav","title","NavigationBar","Navbar","bg","expand","Container","fluid","Brand","Toggle","aria-controls","Offcanvas","aria-labelledby","Nav","App","currentUser","userAlbums","path","albumObj","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.82474c27.chunk.js","sourcesContent":["import { Link, useHistory } from \"react-router-dom\"\nimport {Form, Button, Col} from 'react-bootstrap'\nimport { useState } from 'react'\n\n\nfunction Login({ setCurrentUser, setIsAuthenticated, setUserAlbums }) {\n  const history = useHistory();\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const configObj = {\n      method: \"POST\",\n      headers: {\"Content-Type\": \"application/json\"},\n      body: JSON.stringify(formData),\n    };\n\n    //need to add in sessions route for this fetch\n    fetch(\"/login\", configObj)\n    .then((resp) => {\n      if (resp.ok) {\n        resp.json().then((user) => {\n          setCurrentUser(user);\n          setIsAuthenticated(true);\n          setUserAlbums(user?.albums);\n        })\n        history.push(\"/albumlist\"); \n      } else {\n        resp.json().then((errors) => {\n          console.error(errors);\n        });\n      }\n    });\n  };\n\n\n    return (\n      <div className=\"text-center d-flex flex-column align-items-center\">\n\n        <h2>Welcome to Pictostash!</h2>\n        <br/>\n\n        <Col sm={8}>\n          <Form onSubmit={handleSubmit}>\n            \n            <Form.Group className=\"mb-3\" controlId=\"formBasicUsername\">\n              <Form.Control placeholder=\"Username\" type=\"text\" name=\"username\" value={formData.username} onChange={(e) => handleChange(e)}/>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Control placeholder=\"Password\" type=\"password\" name=\"password\" value={formData.password} onChange={(e) => handleChange(e)}/>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Control placeholder=\"Email\" type=\"email\" name=\"email\" value={formData.email} onChange={(e) => handleChange(e)}/>\n            </Form.Group>\n\n            <br></br>\n\n            <Button variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n\n          </Form>\n          <br></br>\n        </Col>\n        <Link exact to=\"/signup\">Don't have an account? Create one here</Link>\n\n      </div>\n    );\n  }\n  \n  export default Login;","import { Form, Button, Col } from 'react-bootstrap'\nimport { useState } from 'react'\nimport { useHistory, Link } from \"react-router-dom\"\n\n\nfunction Signup({setCurrentUser}) {\n  const history = useHistory();\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value});\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const configObj = {\n      method: \"POST\",\n      headers: {\"Content-Type\": \"application/json\"},\n      body: JSON.stringify(formData),\n    };\n\n    fetch(\"/signup\", configObj)\n    .then((resp) => {\n      if (resp.ok) {\n        resp.json().then((user) => {\n          setCurrentUser(user);\n        })\n        //reroutes to home landing page\n        history.push(\"/\"); \n      } else {\n        resp.json().then((errors) => {\n          console.error(errors);\n        });\n      }\n    });\n  };\n\n  return (\n    <div className=\"text-center d-flex flex-column align-items-center\">\n\n      <h2>Create your account</h2>\n      <br/>\n      <Col sm={8} md={6} lg={4}>\n        <Form onSubmit={handleSubmit}>\n            \n            <Form.Group className=\"mb-3\" controlId=\"formBasicUsername\">\n              <Form.Control placeholder=\"Username\" type=\"text\" name=\"username\" value={formData.username} onChange={(e) => handleChange(e)} />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Control placeholder=\"Password\" type=\"password\" name=\"password\" value={formData.password} onChange={(e) => handleChange(e)} />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Control placeholder=\"Email\" type=\"email\" name=\"email\" value={formData.email} onChange={(e) => handleChange(e)}/>\n            </Form.Group>\n\n            <br></br>\n\n            <Button variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n\n        </Form>\n      </Col>\n      <br/>\n      <Link to=\"/\">Back to Log in Page</Link>\n\n    </div>\n  );\n}\n\nexport default Signup;","import { useRef, useState, useEffect } from 'react'\nimport {Card, Button, Col, Tooltip, OverlayTrigger, Row} from 'react-bootstrap'\nimport {useHistory} from 'react-router'\n\nconst imgStyle = {\n    'objectFit': 'cover',\n    'max-height': '18rem',\n    'max-width' : '18rem',\n    'min-height': '18rem',\n    'min-width' : '18rem'\n}\n\nfunction AlbumCard({album, setActiveAlbum, deleteHandler, handleShowUpdate}) {\n\n    const history = useHistory()\n    const [show, setShow] = useState(false)\n    const [thumbnail, setThumbnail] = useState('')\n    const target = useRef(null)\n    const renderInfo = (props) => (\n        <Tooltip id='info-tooltip' {...props}>\n            <p>Name: {album.name}</p>\n            <p>Date: {album.date}</p>\n            <p>Location: {album.location}</p>\n            <p>Album Info: {album.description}</p>\n        </Tooltip>\n    )\n\n    useEffect(() => {\n        console.log(\"Inside AlbumCard useEffect\");        \n        const picFetchURL = `/albums/${album.id}`;\n        fetch(picFetchURL)\n        .then(res => res.json())\n        .then(response => {\n            setThumbnail(response.length > 0 ? response[0].image_url : \"https://picsum.photos/300/300\");\n        });        \n    },[]);\n\n    function handleClick() {\n        setActiveAlbum(album);\n        history.push(`/album/${album.id}`);        \n    }\n\n    return (\n        <div className=\"album-card\">\n            <Col className='my-5 mx-3'>\n                <Card style={{ minwidth: '18rem' }}>\n                    <Card.Img variant=\"top\" src={thumbnail} style={imgStyle}/>\n                    <Card.Body style={{\"backgroundColor\": \"#deb185\"}}>\n                        <Card.Title style={{\"margin-bottom\": '15px'}}>{album.name ? album.name : \"No title\"}</Card.Title>\n                        <Row className='my-1'>\n                            <Col sm={6}>\n                                <Button id='view-btn' variant=\"primary\" onClick={handleClick}>View Album</Button>\n                            </Col>\n                            <Col sm={6}>\n                                <Button id='edit-btn' variant=\"primary\" onClick={() => handleShowUpdate(album.name, album.description, album.location, album.date, album.id)}>Edit Details</Button>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={8}>\n                                <Button id='delete-btn' variant=\"danger\" onClick={() => deleteHandler(album.id)}>Delete Album</Button>\n                            </Col>\n                            <Col className='d-flex justify-content-center align-items-center'>\n                                <OverlayTrigger\n                                    placement='right'\n                                    delay={{ show: 150, hide: 200 }}\n                                    overlay={renderInfo}\n                                >\n                                    <Button className='btn-circle btn-sm' ref={target} onClick={() => setShow(!show)}>\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-info-lg\" viewBox=\"0 0 16 16\">\n                                        <path d=\"m9.708 6.075-3.024.379-.108.502.595.108c.387.093.464.232.38.619l-.975 4.577c-.255 1.183.14 1.74 1.067 1.74.72 0 1.554-.332 1.933-.789l.116-.549c-.263.232-.65.325-.905.325-.363 0-.494-.255-.402-.704l1.323-6.208Zm.091-2.755a1.32 1.32 0 1 1-2.64 0 1.32 1.32 0 0 1 2.64 0Z\"/>\n                                    </svg>\n                                    </Button>\n                                </OverlayTrigger>\n                            </Col>\n                        </Row>\n                    </Card.Body>\n                </Card>\n            </Col>\n        </div>\n    )\n}\n\nexport default AlbumCard;\n","import { Row, Col, Button, Modal, Form } from \"react-bootstrap\";\nimport AlbumCard from \"./AlbumCard\";\nimport {useState} from \"react\";\n\nfunction AlbumList({user, albums, addNewAlbum, activeAlbum, setActiveAlbum, setUserAlbums}) {\n\n    const [show, setShow] = useState(false);\n    const [showUpdateForm, setShowUpdateForm] = useState(false)\n    const [hasName, setHasName] = useState(true)\n    const [hasDescription, setHasDescription] = useState(true)\n    const [hasLocation, setHasLocation] = useState(true)\n    const [hasDate, setHasDate] = useState(true)\n    const [formData, setFormData] = useState({\n        name: '',\n        description: '',\n        location: '',\n        date: ''\n    })\n    const [updateForm, setUpdateForm] = useState({\n        name: '',\n        description: '',\n        location: '',\n        date: '',\n        id: ''\n    })\n\n    function handleShow() {\n        setShow(true)\n    }\n\n    function handleClose() {\n        setShow(false)\n    }\n\n    function handleShowUpdate(name, description, location, date, id) {\n        setUpdateForm({\n            name: name,\n            description: description,\n            location: location,\n            date: date,\n            id: id\n        })\n        setShowUpdateForm(true)\n    }\n\n    function handleCloseUpdate() {\n        setShowUpdateForm(false)\n    }\n\n    const allAlbumCards = albums.map(album => <AlbumCard\n        key={album.id}\n        album={album}\n        setActiveAlbum={setActiveAlbum}\n        deleteHandler={deleteHandler}\n        handleShowUpdate={handleShowUpdate}\n        />);\n    \n    //upload helpers (within modal)\n    function changeHandler(e) {\n        const key = e.target.name;\n        const val = e.target.value;\n        setFormData({\n            ...formData,\n            [key]: val\n        });\n    } \n\n    function changeUpdateHandler(e) {\n        const key = e.target.name;\n        const val = e.target.value;\n        setUpdateForm({\n            ...updateForm,\n            [key]: val\n        });\n    }\n    \n    //upload helper (within modal)    \n    function submitHandler(e) {\n        e.preventDefault();\n        if (formData.name.length === 0 || formData.description.length === 0 || formData.location.length === 0 || formData.date.length === 0) {\n            formData.name === '' ? setHasName(false) : setHasName(true)\n            formData.description === '' ? setHasDescription(false) : setHasDescription(true)\n            formData.location === '' ? setHasLocation(false) : setHasLocation(true)\n            formData.date === '' ? setHasDate(false) : setHasDate(true)\n            console.log(\"I see you trying to submit baaaad data ='(\");\n        } else {            \n            console.log('I see you trying to create a new album.');\n            const postURL = '/albums';\n            const postConfig = {\n                method: 'POST',\n                headers: {'Content-Type':'application/json'},\n                body: JSON.stringify(formData)\n            };\n            fetch(postURL, postConfig)\n            .then(res => res.json())\n            .then(responseAlbumObj => {\n                addNewAlbum(responseAlbumObj)\n                setFormData({\n                    name: '',\n                    description: '',\n                    location: '',\n                    date: ''\n                })\n                setHasName(true)\n                setHasDescription(true)\n                setHasLocation(true)\n                setHasDate(true)\n            });\n            handleClose(); \n        }               \n    }\n\n    function deleteHandler(id) {\n        const filteredAlbums = albums.filter(album => album.id !== id)\n        console.log(filteredAlbums)\n        setUserAlbums([...filteredAlbums])\n        fetch(`/albums/${id}`, {method: \"DELETE\"})\n    }\n\n    function editHandler() {\n        console.log(albums)\n        if (updateForm.name !== '' && updateForm.description !== '' && updateForm.location !== '' && updateForm.date !== '') {\n            const newAlbums = albums.map(album => {\n                if (album.id === updateForm.id) {\n                    console.log('here')\n                    return {\n                        name: updateForm.name,\n                        description: updateForm.description,\n                        location: updateForm.location,\n                        date: updateForm.date,\n                        id: updateForm.id,\n                        user_id: user.id\n                    }\n                } else {\n                    console.log(album)\n                    return album\n                }\n            })\n            console.log(newAlbums)\n            setUserAlbums([...newAlbums])\n            fetch(`/albums/${updateForm.id}`, {\n                method: 'PATCH',\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(updateForm)\n            })\n            .then(r => r.json())\n            .then(data => {\n                console.log(data)\n                handleCloseUpdate()\n            })\n        } else {\n            console.log(\"cannot apply changes\")\n        }\n    }\n    \n    return (\n        <div className=\"container image-list\">\n            <Row>\n                <Col lg={12}>\n                    <h1 className=\"text-center my-5\">{user?.username ? `${user.username.toUpperCase()}'S ALBUMS` : \"YOUR ALBUMS\"}</h1>\n                </Col>\n            </Row>\n            <Row sm=\"auto\" className=\"d-flex justify-content-center\">\n                {allAlbumCards}\n            </Row>\n\n            <Button className=\"my-5 btn-circle btn-xl fixed-bottom\" variant=\"primary\" onClick={handleShow}>\n                <div>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" fill=\"currentColor\" class=\"bi bi-plus-circle\" viewBox=\"0 0 16 16\">\n                        <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n                        <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"/>\n                    </svg>\n                </div>\n            </Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Create new Album</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={submitHandler}>\n                        <Form.Control type=\"text\" name=\"name\" placeholder=\"album name\" onChange={changeHandler} value={formData.name}/>\n                        {hasName ? null : <Form.Text className='invalid-input' style={{color: 'red'}} >You must enter a name.</Form.Text>}\n                        <Form.Control type=\"text\" name=\"description\" placeholder=\"description\" onChange={changeHandler} value={formData.description}/>\n                        {hasDescription ? null : <Form.Text className='invalid-input' style={{color: 'red'}} >You must enter a description.</Form.Text>}\n                        <Form.Control type=\"text\" name=\"location\" placeholder=\"location\" onChange={changeHandler} value={formData.location}/>\n                        {hasLocation ? null : <Form.Text className='invalid-input' style={{color: 'red'}} >You must enter a location.</Form.Text>}\n                        <Form.Control type=\"date\" name=\"date\" onChange={changeHandler} value={formData.date}/>\n                        {hasDate ? null : <Form.Text className='invalid-input' style={{color: 'red'}} >You must enter a date.</Form.Text>}\n                    </Form>                        \n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button type=\"submit\" variant=\"primary\" onClick={submitHandler}>\n                        Create Album\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n            <Modal show={showUpdateForm} onHide={handleCloseUpdate}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Edit Your Details</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={editHandler}>\n                        <Form.Text className='invalid-input' >Album Name</Form.Text>\n                        <Form.Control type=\"text\" name=\"name\" placeholder=\"album name\" onChange={changeUpdateHandler} value={updateForm.name}/>\n                        {updateForm.name !== '' ? null : <Form.Text className='invalid-input' style={{color: 'red'}} >You must enter a name.</Form.Text>}\n                        <Form.Text className='invalid-input' >Description</Form.Text>\n                        <Form.Control type=\"text\" name=\"description\" placeholder=\"description\" onChange={changeUpdateHandler} value={updateForm.description}/>\n                        {updateForm.description !== '' ? null : <Form.Text className='invalid-input' style={{color: 'red'}} >You must enter a description.</Form.Text>}\n                        <Form.Text className='invalid-input' >Location</Form.Text>\n                        <Form.Control type=\"text\" name=\"location\" placeholder=\"location\" onChange={changeUpdateHandler} value={updateForm.location}/>\n                        {updateForm.location !== '' ? null : <Form.Text className='invalid-input' style={{color: 'red'}} >You must enter a location.</Form.Text>}\n                        <Form.Text className='invalid-input' >Date</Form.Text>\n                        <Form.Control type=\"date\" name=\"date\" onChange={changeUpdateHandler} value={updateForm.date}/>\n                        {updateForm.date !== '' ? null : <Form.Text className='invalid-input' style={{color: 'red'}} >You must enter a date.</Form.Text>}\n                    </Form>                        \n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleCloseUpdate}>\n                        Close\n                    </Button>\n                    <Button type=\"submit\" variant=\"primary\" onClick={editHandler}>\n                        Apply Changes\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    )\n}\n\nexport default AlbumList;\n","import {Card, Button, Col} from 'react-bootstrap'\n\nfunction PictureCard({imgUrl, handleShowImg, currId}) {\n    return (\n        <div className=\"picture-card\">\n            <Col className='my-5 mx-3'>\n                <Card style={{ width: '18rem' }}>\n                    <Card.Img className='card-img' variant=\"top\" src={imgUrl} style={{'objectFit': 'cover'}} />\n                    <Card.Body style={{\"backgroundColor\": \"#deb185\", \"textAlign\": \"center\"}}>\n                        <Button variant=\"primary\" onClick={() => handleShowImg(currId)}>View Image</Button>\n                    </Card.Body>\n                </Card>\n            </Col>\n        </div>\n    )\n}\n\nexport default PictureCard;","import { Carousel } from \"react-bootstrap\";\n\nfunction CarouselImage({imgUrls, index, setIndex}) {\n\n    let unpackedURLs = [];\n    \n    if (imgUrls[0]?.image_url !== undefined) {\n        unpackedURLs = imgUrls.map(imgRecord => imgRecord.image_url)\n    } else {\n        unpackedURLs = imgUrls;\n    }\n\n    const items = unpackedURLs.map(url => <Carousel.Item>\n        <img className=\"d-block w-100\" src={url} alt=\"\" />\n    </Carousel.Item>)\n\n    const handleSelect = (index) => {\n        setIndex(index);\n    };\n\n    return (\n        <Carousel activeIndex={index} onSelect={handleSelect}>\n            {items}\n        </Carousel>\n    )\n}\n\nexport default CarouselImage;","import { Row, Col, Button, Modal } from \"react-bootstrap\";\nimport Form from 'react-bootstrap/Form';\nimport { useEffect, useState } from \"react\";\nimport PictureCard from \"./PictureCard\";\nimport CarouselImage from \"./CarouselImage\";\nimport {useLocation} from 'react-router-dom';\n\nfunction Album({activeAlbum}) {    \n    const imgUrls = ['https://picsum.photos/500/500', 'https://picsum.photos/400/500', 'https://picsum.photos/500/400', 'https://picsum.photos/400/400', 'https://picsum.photos/600/500']\n    const [allURLs, setAllURLs] = useState([]);\n    const [show, setShow] = useState(false)\n    const [showImg, setShowImg] = useState(false)\n    const [index, setIndex] = useState(0)\n    const [uploadPictures, setUploadPictures] = useState([]);\n    \n    const location = useLocation();\n    let albumToLoad = location.pathname.split('/')[2];\n    \n    \n    const defaultCards = imgUrls.map(imgUrl => <PictureCard imgUrl={imgUrl} handleShowImg={handleShowImg} />);\n    let pictureCards = [];\n    if (allURLs.length > 0) {\n        pictureCards = allURLs.map(imgURL => <PictureCard imgUrl={imgURL.image_url} handleShowImg={handleShowImg} />);\n    }\n\n    function generatePictureCards (allURLs) {\n        let pictureCards = [];\n        let setIds = 0\n        if (allURLs.length > 0) {\n            pictureCards = allURLs.map(imgURL => <PictureCard key={imgURL.image_url} imgUrl={imgURL.image_url} currId={setIds++} handleShowImg={handleShowImg} />);\n        } else {\n            pictureCards = imgUrls.map(imgUrl => <PictureCard key={imgUrl + setIds} imgUrl={imgUrl} handleShowImg={handleShowImg} />);\n        }\n        return pictureCards;\n    }\n\n    let testCards = generatePictureCards(allURLs);\n    \n    //Load associated picture records on load of /Album endpoint\n    useEffect(() => {        \n        //console.log(\"Inside Album useEffect\");        \n        const picFetchURL = `/albums/${albumToLoad}`;\n        fetch(picFetchURL)\n        .then(res => res.json())\n        .then(response => {\n            console.log(\"Successful fetch - displaying results\");\n            console.log(response);\n            setAllURLs(response);\n        });        \n    },[activeAlbum]);\n\n    function handleShow() {\n        setShow(true)\n    }\n\n    function handleClose() {\n        setShow(false)\n    }\n\n    function handleShowImg(id) {\n        setIndex(id)\n        setShowImg(true)\n    }\n\n    function handleCloseImg() {\n        setShowImg(false)\n    }\n    \n    //upload helpers (within modal)\n    function changeHandler(e) {\n        const form = e.target;\n        const allFiles = form.files;\n        setUploadPictures(Object.values(allFiles));        \n    } \n    \n    //upload helper (within modal)    \n    function submitHandler(e) {\n        e.preventDefault();\n        //verify upload attempt isn't empty\n        if (uploadPictures.length > 0) {            \n            //verify upload attempt contains the expected datatype\n            if (uploadPictures[0] instanceof File) {                \n                //fetch() constants\n                const postURL = 'https://api.cloudinary.com/v1_1/flatironstudent/image/upload';\n                const secondPostURL = '/pictures';                \n                //need to create fetches to cloudinary and pictostash for each picture upload\n                for (const file of uploadPictures) {\n                    //create form data object\n                    let fd = new FormData();\n                    //append file and preset\n                    fd.append('file', file);\n                    fd.append('upload_preset', 'unsigned_user');\n                    //each file will need its own postConfig\n                    const postConfig = {\n                        method: 'POST',\n                        body: fd\n                    };\n                    //upload pre-work completed - start work\n                    fetch(postURL, postConfig)\n                    .then(res => res.json())\n                    .then(response => {                        \n                        let imgURL = response.secure_url;                        \n                        //console.log(imgURL);\n                        const picRecord = {\n                            album_id: activeAlbum.id,\n                            image_url: imgURL\n                        };                        \n                        const secondPostConfig = {\n                            method: 'POST',\n                            headers: {'Content-Type':'application/json'},\n                            body: JSON.stringify(picRecord)\n                        };\n                        fetch(secondPostURL, secondPostConfig)\n                        .then(res => res.json())\n                        .then(pictureRecordObj => {\n                            //console.log(pictureRecordObj);\n                            setAllURLs([...allURLs, pictureRecordObj]);\n                        });\n                    });\n                }\n                //END for loop for fetches\n                //CLEANUP\n                setUploadPictures([]);\n                handleClose();                \n            } else {\n                console.log(\"State does not appear to contain image data to upload X_X\");\n            }\n        } else {\n            console.log(\"Seeing empty upload attempt. Need to add error here.\");\n        }        \n    }\n\n    return (\n        <div className=\"container d-flex flex-column image-list\">\n            <Row>\n                <Col lg={12}>\n                    <h1 className=\"text-center my-5\">{activeAlbum.name}</h1>\n                </Col>\n            </Row>\n            <Row sm=\"auto\" className=\"d-flex justify-content-center\">\n                {testCards}\n            </Row>\n            <Button className=\"my-5 btn-circle btn-xl fixed-bottom\" variant=\"primary\" onClick={handleShow}>\n                <div>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" fill=\"currentColor\" className=\"bi bi-plus-circle\" viewBox=\"0 0 16 16\">\n                        <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n                        <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"/>\n                    </svg>\n                </div>\n            </Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Upload Photo</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={submitHandler}>\n                        <Form.Control type=\"file\" onChange={changeHandler} multiple/>\n                    </Form>                        \n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button type=\"submit\" variant=\"primary\" onClick={submitHandler}>\n                        {uploadPictures.length === 1 ? \"Upload Photo\" : \"Upload Photos\"}\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n            <Modal show={showImg} onHide={handleCloseImg} centered>\n                {allURLs.length > 0 ? <CarouselImage imgUrls={allURLs} index={index} setIndex={setIndex} /> : <CarouselImage imgUrls={imgUrls} index={index} setIndex={setIndex} />}\n            </Modal>\n        </div>\n    )\n}\n\nexport default Album;","import {useState} from \"react\";\nfunction Sandbox() {\n    const [formData, setFormData] = useState([]);\n    //COMPONENT GOAL:\n    // Create a form to accept an image as input\n    // then pass that image to the cloudinary API\n    // and log resulting data (the URL for the hosted image)\n\n    function newSubmitHandler(e) {\n        e.preventDefault();\n        console.log(\"I see you trying to submit - let's check state data\");\n        console.log(formData);\n        if (formData[0] instanceof File) {\n            console.log(\"State data appears to contain at least one file!\");\n            console.log(\"Proceeding to create a file upload request for each file.\");\n            //CURRENTLY DISABLED - MULTIPLE FILE UPLOAD DISABLED\n            /*\n            for (const file of formData) {\n                let fd = new FormData();\n                fd.append('file', file);\n                fd.append('upload_preset', 'unsigned_user');\n                \n                const postURL = 'https://api.cloudinary.com/v1_1/flatironstudent/image/upload';\n                const postConfig = {\n                    method: 'POST',                    \n                    body: fd\n                };\n\n                fetch(postURL, postConfig)\n                .then(res => res.json())\n                .then(response => {\n                    console.log(response);            \n                    let image_url = response.secure_url;\n                    console.log(image_url);\n                })\n            }*/\n        } else {\n            console.log(\"You're trying to trick me! There's no file here D'=\");\n        }\n    }\n\n\n    function submitHandler(e) {\n        e.preventDefault();\n        console.log(\"Image upload in Sandbox currently disabled! But I see your submit request :D\");\n        // CURRENTLY DISABLED - SINGLE FILE UPLOAD DISABLED \n        // didn't need a ton of test data in the cloudinary account, now that the feature works\n        // uncomment the block below if you need to test the full upload features\n        /*\n        let fd = new FormData();\n        fd.append('file', formData.file);\n        fd.append('upload_preset', 'unsigned_user');        \n        //posturl_template = 'https://api.cloudinary.com/v1_1/:cloud_name/:action'\n        const postURL = 'https://api.cloudinary.com/v1_1/flatironstudent/image/upload';\n        const postConfig = {\n            method: 'POST',\n            withcredentials: false,            \n            body: fd\n        };        \n        \n        fetch(postURL, postConfig)\n        .then(res => res.json())\n        .then(response => {\n            console.log(response);            \n            let image_url = response.secure_url;\n            console.log(image_url);\n        })\n        */\n    }\n\n    function changeHandler(e) {\n        //event 'e' is passed in, need to access image data within form        \n        console.log(e.target);\n        const form = e.target;        \n        const allFiles = form.files;\n        console.log(Object.values(allFiles));\n        // VERBOSE debugging\n        /*\n        for (const val of Object.values(allFiles)) {\n            console.log(val);            \n        }\n        */\n        setFormData(Object.values(allFiles));\n        /* VERBOSE debugging\n        for (const file of formData) {\n            console.log(\"You kinda did it, Davery!\");\n            console.log(file);\n        }\n        */\n\n                \n        //Note: allFiles is actually an object, not an array\n        //allFiles = {0, 1, 3... n, length: n}\n        //accessing allFiles[i] will index similarly to an array, and return an object that is the image data at that \"index\" to upload \n        \n        //This updates the formData in state to hold the image data the user selected to upload\n        /*\n        setFormData({\n            ...formData,\n            file: allFiles[0]\n        });\n        */\n        \n        /* This block will allow you to iterate over all the files in\n            // an upload with multiple files\n        for (const file of allFiles) {\n            console.log(\"Logging a file in allFiles collection\");\n            console.log(file);\n        }\n        */       \n    }\n    return (\n        <div id=\"container\">\n            <p>This component is a demonstration of a basic single file upload form</p>\n            <form id=\"uploadForm\" onSubmit={submitHandler}>\n                <div>\n                    <input type=\"file\" name=\"file\" onChange={changeHandler}/>\n                    <input type=\"submit\" />\n                </div>\n            </form>\n            <p>This component is a WIP for a muptliple file upload form</p>\n            <form id=\"multipleUploadForm\" onSubmit={newSubmitHandler} onChange={changeHandler}>\n                <input type=\"file\" name=\"files\" onChange={changeHandler} multiple/>\n                <input type=\"submit\"/>\n            </form>\n                        \n        </div>\n    )\n}\n\nexport default Sandbox;","import { NavDropdown } from \"react-bootstrap\";\nimport {NavLink, useParams, useHistory} from \"react-router-dom\"\n\nfunction NavDropdownList({albums, setActiveAlbum}) {\n    const history = useHistory()\n\n    // const params = useParams()\n\n    // function albumNav(e, id) {\n    //     setActiveAlbum(album.id)\n    // }\n\n    function albumNav(e, album) {\n        console.log(album)\n        setActiveAlbum(album);\n        history.push(`/album`);        \n    }\n\n\n    const items = albums.map(album => <NavDropdown.Item\n        as={NavLink} to={`/album/${album.id}`} onClick={(e) => albumNav(e, album)}>{album.name}</NavDropdown.Item>)\n\n\n\n    return (\n        <NavDropdown title=\"Album Quick Find\" id=\"offcanvasNavbarDropdown\">\n            {items}\n        </NavDropdown>\n\n    )\n}\n\nexport default NavDropdownList;","import {useHistory, Link, NavLink} from \"react-router-dom\"\nimport {Navbar, Container, Nav, Offcanvas, Button} from 'react-bootstrap'\nimport NavDropdownList from \"./NavDropdownList\"\n\nfunction NavigationBar({user, setCurrentUser, albums, setActiveAlbum}) {\n    const history = useHistory();\n\n    const handleLogout = () => {\n        fetch('/logout', {method: \"DELETE\"})\n        .then(res => {\n              if (res.ok) {\n                setCurrentUser(null)\n                history.push(\"/\"); \n              }\n            })\n    }\n\nconsole.log(albums)\n\n    return(\n        <>\n            <Navbar bg=\"primary\" expand={false}>\n                <Container fluid>\n                    {user ? <Navbar.Brand as={NavLink} to=\"/albumlist\">Pictostash</Navbar.Brand> : <Navbar.Brand as={NavLink} to=\"/\">Pictostash</Navbar.Brand>}\n                    <Navbar.Toggle aria-controls=\"offcanvasNavbar\" />\n                    <Navbar.Offcanvas\n                    id=\"offcanvasNavbar\"\n                    aria-labelledby=\"offcanvasNavbarLabel\"\n                    placement=\"end\"\n                    >\n                    <Offcanvas.Header closeButton>\n                        <Offcanvas.Title id=\"offcanvasNavbarLabel\">Pictostash</Offcanvas.Title>\n                    </Offcanvas.Header>\n                    <Offcanvas.Body>\n                        <Nav className=\"justify-content-end flex-grow-1 pe-3\">\n                        {user ? <h4>Hello {user.username}!</h4> : null}\n                        {user ? <Button onClick={handleLogout}>Logout</Button> : null}\n                        {user ? <Link to=\"/albumlist\">All Albums</Link> : null}\n                        \n                        {albums.length > 0 ? <NavDropdownList albums={albums} setActiveAlbum={setActiveAlbum} /> : null}\n\n                        </Nav>\n                    </Offcanvas.Body>\n                    </Navbar.Offcanvas>\n                </Container>\n            </Navbar>\n        </>\n    )\n}\n\nexport default NavigationBar;","import React, {useState, useEffect} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\n// import '../App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Login from \"./Login.js\"\nimport Signup from \"./Signup.js\"\nimport AlbumList from \"./AlbumList.js\";\nimport Album from \"./Album.js\";\nimport Sandbox from \"./Sandbox.js\";\nimport NavigationBar from \"./NavigationBar\";\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [currentUser, setCurrentUser] = useState([]);\n  const [userAlbums, setUserAlbums] = useState([]);\n  const [activeAlbum, setActiveAlbum] = useState([]);\n  \n\n  useEffect(() => {\n    fetch(\"/me\").then((resp) => {\n      if (resp.ok) {\n        resp.json().then((user) => {\n          setCurrentUser(user);\n          setIsAuthenticated(true);\n          setUserAlbums(user?.albums);\n        });\n      }\n    });\n  }, []);\n\n  console.log(currentUser);\n\n\n  //state update helper\n  function addNewAlbum(albumObj) {\n    setUserAlbums([...userAlbums, albumObj]);\n  }\n  \n  return (\n    <div className=\"App\">\n      <NavigationBar user={currentUser} setCurrentUser ={setCurrentUser} albums={userAlbums} setActiveAlbum={setActiveAlbum}/>\n      <Switch>\n        <Route exact path=\"/\">\n          <Login setUserAlbums={setUserAlbums} setIsAuthenticated={setIsAuthenticated} setCurrentUser ={setCurrentUser}/>\n        </Route>\n        <Route exact path=\"/signup\">\n          <Signup setCurrentUser ={setCurrentUser}/>\n        </Route>\n        <Route exact path=\"/albumlist\">\n          <AlbumList\n            user={currentUser}\n            albums={userAlbums}\n            addNewAlbum={addNewAlbum}\n            activeAlbum={activeAlbum}\n            setActiveAlbum={setActiveAlbum}\n            setUserAlbums={setUserAlbums}\n          />\n        </Route>\n        <Route exact path=\"/album/:id\">\n          <Album activeAlbum={activeAlbum}/>\n        </Route>\n        <Route exact path=\"/sandbox\">\n          <Sandbox />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./components/App.js\";\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}